"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
exports.__esModule = true;
exports.JoinPayload = void 0;
var flatbuffers = require("flatbuffers");
var JoinPayload = /** @class */ (function () {
    function JoinPayload() {
        this.bb = null;
        this.bb_pos = 0;
    }
    JoinPayload.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    JoinPayload.getRootAsJoinPayload = function (bb, obj) {
        return (obj || new JoinPayload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    JoinPayload.getSizePrefixedRootAsJoinPayload = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new JoinPayload()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    JoinPayload.prototype.offer = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    JoinPayload.prototype.token = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    JoinPayload.startJoinPayload = function (builder) {
        builder.startObject(2);
    };
    JoinPayload.addOffer = function (builder, offerOffset) {
        builder.addFieldOffset(0, offerOffset, 0);
    };
    JoinPayload.addToken = function (builder, tokenOffset) {
        builder.addFieldOffset(1, tokenOffset, 0);
    };
    JoinPayload.endJoinPayload = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    JoinPayload.createJoinPayload = function (builder, offerOffset, tokenOffset) {
        JoinPayload.startJoinPayload(builder);
        JoinPayload.addOffer(builder, offerOffset);
        JoinPayload.addToken(builder, tokenOffset);
        return JoinPayload.endJoinPayload(builder);
    };
    return JoinPayload;
}());
exports.JoinPayload = JoinPayload;
